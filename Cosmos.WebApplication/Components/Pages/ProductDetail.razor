@page "/product"
@page "/product/{Id:int}"
@using Cosmos.Shared.Models
@using Microsoft.AspNetCore.Components.Forms
@using MudBlazor
@inject IWebApi WebApi
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<h3>Product Detail</h3>

@* <MudCarousel Class="mud-width-full" ItemsSource="@_product?.Images" Style="height:200px;">
	<ItemTemplate>
		<MudImage Src="images/logo.jpeg" Height="200" ObjectFit="ObjectFit.Cover"></MudImage>
	</ItemTemplate>
</MudCarousel> *@

<MudCarousel Class="mud-width-full" Style="height:200px;" ShowArrows="@arrows" ShowBullets="@bullets" EnableSwipeGesture="@enableSwipeGesture" AutoCycle="@autocycle" TData="object">
	<MudCarouselItem Transition="transition" Color="@Color.Primary">
		<div class="d-flex" style="height:100%">
			<MudImage Src="images/logo.jpeg" Height="200" ObjectFit="ObjectFit.Cover"></MudImage>
		</div>
	</MudCarouselItem>
	<MudCarouselItem Transition="transition" Color="@Color.Secondary">
		<div class="d-flex" style="height:100%">
			<MudImage Src="images/Quarta Asa.jpeg" Height="200" ObjectFit="ObjectFit.Cover"></MudImage>
		</div>
	</MudCarouselItem>
</MudCarousel>

@if (_product is not null)
{
	<EditForm Model="_product" FormName="ProductEditForm" OnValidSubmit="SaveProduct">
		<div class="mb-3">
			<label for="exampleFormControlInput1" class="form-label">Title</label>
			<InputText class="form-control" id="exampleFormControlInput1" @bind-Value=@_product.Name></InputText>
		</div>
		<div class="mb-3">
			<label for="exampleFormControlInput2" class="form-label">Description</label>
			<InputText class="form-control" id="exampleFormControlInput2" @bind-Value=@_product.Description></InputText>
		</div>
		<div class="mb-3">
			<label for="exampleFormControlInput3" class="form-label">Price</label>
			<InputNumber class="form-control" id="exampleFormControlInput3" @bind-Value=@_product.Price></InputNumber>
		</div>
		<div class="mb-3">
			<label for="exampleFormControlInput4" class="form-label">Stock</label>
			<InputNumber class="form-control" id="exampleFormControlInput4" @bind-Value=@_product.Stock></InputNumber>
		</div>
		<button type="submit" class="btn btn-primary" @onclick=SaveProduct>Save</button>
		<button class="btn btn-danger" @* @onclick=DeleteProduct *@>Delete</button>

	</EditForm>
}

@code {
	//NOTA: 
	// @page "/product" -> se chamarmos esta, ele pensa que e para adiconar novo produto
	// @page "/product/{Id:int}" -> enquanto esta serve para ver um produto especifico

	private bool arrows = true;
	private bool bullets = true;
	private bool enableSwipeGesture = true;
	private bool autocycle = true;
	private Transition transition = Transition.Slide;

	[Parameter]
	public int? Id { get; set; }

	private Product _product { get; set; } = new();

	private async void SaveProduct()
	{
		_product.CreatedAt = DateTime.Now;

		var response = await WebApi.UpdateProduct(_product);

		_product = new();

		// Snackbar.Add("Product added successfully", Severity.Success);

		StateHasChanged();

		NavigationManager.NavigateTo($"/", true);
	}

	protected override async Task OnParametersSetAsync()
	{
		if (Id is not null)
		{
			_product = await WebApi.GetProduct(Id.Value);
		}
	}

	// private void DeleteProduct()
	// {
	// 	if (Product is not null)
	// 		ProductService.DeleteProduct(Product.ProductId);
	// 		NavigationManager.NavigateTo($"/");
	// }

}
