@page "/"
@using Cosmos.Shared.Models
@inject NavigationManager NavigationManager
@inject IWebApi WebApi
@rendermode InteractiveServer

<MudText Align="Align.Center" Typo="Typo.h3"><b>List of Products</b></MudText>

@* <MudCarousel Class="mud-width-full" ShowArrows="@(product.Images.Count > 1)" ShowBullets="@(product.Images.Count > 1)" ItemsSource="@product?.Images" Style="height:200px" AutoCycle="false"> *@

@if (_products?.Any() is true)
{
    foreach (var product in _products)
    {
        <MudCard Class="w-25 m-2">
            <MudCardMedia Image="images/logo.jpeg" Height="200" />
            <MudCardContent>
                <MudText Typo="Typo.h5">@product.Name</MudText>
                <MudText Typo="Typo.body2">@product.Description</MudText>
            </MudCardContent>
            <MudCardActions>
                <MudButton Variant="Variant.Text" Color="Color.Default" OnClick="() => Details((int)product?.ProductId)">Details</MudButton>
                <MudButton Variant="Variant.Text" Color="Color.Error">Delete</MudButton>
            </MudCardActions>
        </MudCard>
    }
}

@code{
    private List<Product> _products = new();

    protected override async Task OnParametersSetAsync()
    {
        try
        {
            _products = await WebApi.GetAllProducts();
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }
    }

    // private async void DeleteProduct(int? id)
    // {
    //     if(id is not null)
    //     {
    //         var response = await WebApi.DeleteProduct((int)id);
    //     }
    // } 

    private void Details(int? id){
        NavigationManager.NavigateTo($"/product/{id}", true);
    }

}