@page "/"
@using Cosmos.Shared.Models
@inject NavigationManager NavigationManager
@inject IWebApi WebApi
@rendermode InteractiveServer

<PageTitle>Home</PageTitle>

@if (_products.Any())
{
    <div class="d-flex flex-wrap">
        @foreach (var product in _products.Where(x => x.IsDeleted == false))
        {
            <MudCard Class="w-25 m-2">
                <MudCarousel Class="mud-width-full" ShowArrows="@(product.Images.Count > 1)" ShowBullets="@(product.Images.Count > 1)" ItemsSource="@product?.Images" Style="height:200px" AutoCycle="false">
                    <ItemTemplate>
                        <MudImage Src="@context.URL" Height="200" ObjectFit="ObjectFit.Cover"></MudImage>
                    </ItemTemplate>
                </MudCarousel>
                <MudCardContent>
                    <MudText Typo="Typo.h5">@product?.Name</MudText>
                    <MudText Typo="Typo.body2">@product?.Description</MudText>
                </MudCardContent>
                <MudCardActions>
                    @* <MudButton Variant="Variant.Text" Color="Color.Default" OnClick="()=>Details((int)product?.ProductId)">Favorite</MudButton> *@
                    <MudButton Variant="Variant.Text" Color="Color.Default" OnClick="() => Details((int)product?.ProductId)">Details</MudButton>
                    <MudButton Variant="Variant.Text" Color="Color.Error" OnClick="() => DeleteProduct((int)product?.ProductId)">Delete</MudButton>
                </MudCardActions>
            </MudCard>
        }
    </div>
}

@code{
    private List<Product> _products { get; set; } = new();

    protected override async Task OnParametersSetAsync()
    {
        try
        {
            _products = await WebApi.GetAllProducts();
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }
    }

    private async void DeleteProduct(long? id)
    {
        if(id is not null)
        {
            var response = await WebApi.DeleteProduct((int)id);
        }
    } 

    private void Details(int? id){
        NavigationManager.NavigateTo($"product/{id}", true);
    }

}