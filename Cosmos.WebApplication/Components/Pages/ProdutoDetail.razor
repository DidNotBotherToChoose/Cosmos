@page "/product"
@page "/product/{Id:int}"
@using Cosmos.WebApi.Models
@inject IWebApi WebApi
@rendermode InteractiveServer

<h3>Product Detail</h3>

<MudCarousel Class="mud-width-full" ItemsSource="@_productModel?.Images" Style="height:400px;">
	<ItemTemplate>
		<MudImage Src="@context" Height="200" ObjectFit="ObjectFit.Cover"></MudImage>
	</ItemTemplate>
</MudCarousel>

@* <MudCarousel Class="mud-width-full" Style="height:400px;" TData="object">
	@if (_produtoModel?.Images?.Any() is true)
	{
		foreach (var item in _produtoModel.Images)
		{
			<MudCarouselItem Transition="transition" Color="@Color.Primary">
				<div class="d-flex" style="height:100%">
					<MudImage Src="@item" Elevation="25" Class="rounded-lg" />
				</div>
			</MudCarouselItem>
		}
	}
</MudCarousel> *@

<EditForm FormName="AddProductForm" Model="@_productModel" OnValidSubmit="SaveProduct">
	<InputText @bind-Value=@_productModel.Name />
	<InputText @bind-Value=@_productModel.Description />

	<button type="submit">Save</button>
</EditForm>

@code {
	[Parameter]
	public int? Id { get; set; }

	private Cosmos.Shared.Models.ProductModel _productModel { get; set; } = new();

	private Transition transition = Transition.Slide;

	protected override async Task OnParametersSetAsync()
	{
		if(Id is not null){
			_productModel = await WebApi.GetProduct(Id.Value);
		}
	}

	private async void SaveProduct()
	{
		_productModel.CreatedAt = DateTime.Now;
		var result = await WebApi.UpdateProduct(_productModel);

		_productModel = new();
		StateHasChanged();
	}


}
